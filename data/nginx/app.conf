server {
        listen 80;
        server_name  api.blockbookslab.com;

        location /.well-known/acme-challenge/ {
                root /var/www/certbot;
        }
        location / {
                return 301 https://$host$request_uri;
        }    
}
server {
        listen 443 ssl http2;
        server_name  api.blockbookslab.com;
        ssl_certificate /etc/letsencrypt/live/api.blockbookslab.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.blockbookslab.com/privkey.pem;

        location / {
                proxy_pass             http://service:2411;
                proxy_http_version     1.1;
                proxy_set_header Host      $host;
                proxy_set_header X-Real-IP $remote_addr;
        }
        location /socket.io/ {
                proxy_pass             http://service:2411/socket.io/;   
                proxy_http_version     1.1;
                proxy_set_header Upgrade    $http_upgrade;
                proxy_set_header Connection "upgrade";

                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header Host $http_host;
                proxy_set_header X-NginX-Proxy false;
                proxy_redirect off;
        }
}
# server {
#         listen       80; 
#         listen       443 ssl http2;
#         server_name  api.blockbookslab.com;

#         # ssl on;
#         # server_tokens off;
#         # ssl_certificate /etc/nginx/ssl/live/api.blockbookslab.com/fullchain.pem;
#         # ssl_certificate_key /etc/nginx/ssl/live/api.blockbookslab.com/privkey.pem;
#         # ssl_dhparam /etc/nginx/dhparam/dhparam-2048.pem;
        
#         # ssl_buffer_size 8k;
#         # ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
#         # ssl_prefer_server_ciphers on;
#         # ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

#         location /.well-known/acme-challenge/ {
#                 root /var/www/certbot;
#         }
#         location / {
#                 proxy_pass             http://service:2411;
#                 proxy_http_version     1.1;
#                 proxy_set_header Host      $host;
#                 proxy_set_header X-Real-IP $remote_addr;
#         }
#         location /socket.io/ {
#                 proxy_pass             http://service:2411/socket.io/;   
#                 proxy_http_version     1.1;
#                 proxy_set_header Upgrade    $http_upgrade;
#                 proxy_set_header Connection "upgrade";

#                 proxy_set_header X-Real-IP $remote_addr;
#                 proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#                 proxy_set_header Host $http_host;
#                 proxy_set_header X-NginX-Proxy false;
#                 proxy_redirect off;
#         }

#         include /etc/letsencrypt/options-ssl-nginx.conf;
#         ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
# }